<wpf:HostedApplication  x:Class="VirtualPrinter.App"
						xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
						xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
						xmlns:wpf="clr-namespace:Diamond.Core.Wpf;assembly=Diamond.Core.Wpf"
						xmlns:system="clr-namespace:System;assembly=System.Runtime"
						xmlns:converters="clr-namespace:VirtualPrinter.Converters">
	<Application.Resources>
		<converters:NotBooleanConverter x:Key="NotBooleanConverter" />
		<converters:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverter" />
		<converters:NotObjectToVisibilityConverter x:Key="NotObjectToVisibilityConverter" />
		<converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
		<converters:NotBooleanToVisibilityConverter x:Key="NotBooleanToVisibilityConverter" />
		<converters:StringToImageSourceConverter x:Key="StringToImageSourceConverter" />
		<converters:IpAddressToStringConverter x:Key="IpAddressToStringConverter" />
		<converters:BooleanResultToColorConverter x:Key="BooleanResultToColorConverter" />
		<converters:NotObjectToBooleanConverter x:Key="NotObjectToBooleanConverter" />
		<converters:ListCountToVisibilityConverter x:Key="ListCountToVisibilityConverter" />
		<converters:ListZeroCountToVisibilityConverter x:Key="ListZeroCountToVisibilityConverter" />

		<SolidColorBrush x:Key="BackgroundColor1">#4490c9</SolidColorBrush>
		<SolidColorBrush x:Key="BackgroundColor2">#B7C945</SolidColorBrush>
		<SolidColorBrush x:Key="ForegroundColor1">#252525</SolidColorBrush>
		<SolidColorBrush x:Key="ForegroundColor2">#FFFFFF</SolidColorBrush>
		<SolidColorBrush x:Key="ForegroundColor3">#4490c9</SolidColorBrush>
		<SolidColorBrush x:Key="BorderColor">#AA4472C4</SolidColorBrush>
		<system:Double x:Key="ControlHeight">29</system:Double>
		<Thickness x:Key="ControlMargin">5,5,5,5</Thickness>
		<system:Double x:Key="ButtonWidth">100</system:Double>
		<system:Double x:Key="StatusButtonWidth">48</system:Double>
		<system:Double x:Key="StatusButtonHeight">48</system:Double>
		<CornerRadius x:Key="Radius">4</CornerRadius>

		<Style x:Key="FocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2"
								   StrokeDashArray="1 2"
								   SnapsToDevicePixels="true"
								   StrokeThickness="1"
								   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="Button.Static.Background"
						 Color="#55cbedff" />
		<SolidColorBrush x:Key="Button.Static.Border"
						 Color="#FF8fa8b4" />
		<SolidColorBrush x:Key="Button.MouseOver.Background"
						 Color="#FFBEE6FD" />
		<SolidColorBrush x:Key="Button.MouseOver.Border"
						 Color="#FF3C7FB1" />
		<SolidColorBrush x:Key="Button.Pressed.Background"
						 Color="#FFC4E5F6" />
		<SolidColorBrush x:Key="Button.Pressed.Border"
						 Color="#FF2C628B" />
		<SolidColorBrush x:Key="Button.Disabled.Background"
						 Color="#FFF4F4F4" />
		<SolidColorBrush x:Key="Button.Disabled.Border"
						 Color="#FFADB2B5" />
		<SolidColorBrush x:Key="Button.Disabled.Foreground"
						 Color="#FF838383" />
		<Style x:Key="ButtonStyle1"
			   TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
			<Setter Property="Background"
					Value="{StaticResource Button.Static.Background}" />
			<Setter Property="BorderBrush"
					Value="{StaticResource Button.Static.Border}" />
			<Setter Property="Foreground"
					Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
			<Setter Property="BorderThickness"
					Value="2" />
			<Setter Property="HorizontalContentAlignment"
					Value="Center" />
			<Setter Property="VerticalContentAlignment"
					Value="Center" />
			<Setter Property="Padding"
					Value="1" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border"
								Background="{TemplateBinding Background}"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								CornerRadius="{StaticResource Radius}"
								SnapsToDevicePixels="true">
							<ContentPresenter x:Name="contentPresenter"
											  Focusable="False"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  Margin="{TemplateBinding Padding}"
											  RecognizesAccessKey="True"
											  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted"
									 Value="true">
								<Setter Property="BorderBrush"
										TargetName="border"
										Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
							</Trigger>
							<Trigger Property="IsMouseOver"
									 Value="true">
								<Setter Property="Background"
										TargetName="border"
										Value="{StaticResource Button.MouseOver.Background}" />
								<Setter Property="BorderBrush"
										TargetName="border"
										Value="{StaticResource Button.MouseOver.Border}" />
							</Trigger>
							<Trigger Property="IsPressed"
									 Value="true">
								<Setter Property="Background"
										TargetName="border"
										Value="{StaticResource Button.Pressed.Background}" />
								<Setter Property="BorderBrush"
										TargetName="border"
										Value="{StaticResource Button.Pressed.Border}" />
							</Trigger>
							<Trigger Property="IsEnabled"
									 Value="false">
								<Setter Property="Background"
										TargetName="border"
										Value="{StaticResource Button.Disabled.Background}" />
								<Setter Property="BorderBrush"
										TargetName="border"
										Value="{StaticResource Button.Disabled.Border}" />
								<Setter Property="TextElement.Foreground"
										TargetName="contentPresenter"
										Value="{StaticResource Button.Disabled.Foreground}" />
								<Setter Property="Opacity"
										TargetName="contentPresenter"
										Value=".35" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<SolidColorBrush x:Key="ProgressBar.Progress"
						 Color="#FF4490c9" />
		<SolidColorBrush x:Key="ProgressBar.Background"
						 Color="#FFE6E6E6" />
		<SolidColorBrush x:Key="ProgressBar.Border"
						 Color="#FFBCBCBC" />
		<Style x:Key="ProgressBarStyle1"
			   TargetType="{x:Type ProgressBar}">
			<Setter Property="Foreground"
					Value="{StaticResource ProgressBar.Progress}" />
			<Setter Property="Background"
					Value="{StaticResource ProgressBar.Background}" />
			<Setter Property="BorderBrush"
					Value="{StaticResource ProgressBar.Border}" />
			<Setter Property="BorderThickness"
					Value="1" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ProgressBar}">
						<Grid x:Name="TemplateRoot">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Determinate" />
									<VisualState x:Name="Indeterminate">
										<Storyboard RepeatBehavior="Forever">
											<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation"
																		   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
												<EasingDoubleKeyFrame KeyTime="0"
																	  Value="0.25" />
												<EasingDoubleKeyFrame KeyTime="0:0:1"
																	  Value="0.25" />
												<EasingDoubleKeyFrame KeyTime="0:0:2"
																	  Value="0.25" />
											</DoubleAnimationUsingKeyFrames>
											<PointAnimationUsingKeyFrames Storyboard.TargetName="Animation"
																		  Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
												<EasingPointKeyFrame KeyTime="0"
																	 Value="-0.5,0.5" />
												<EasingPointKeyFrame KeyTime="0:0:1"
																	 Value="0.5,0.5" />
												<EasingPointKeyFrame KeyTime="0:0:2"
																	 Value="1.5,0.5" />
											</PointAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border Background="{TemplateBinding Background}"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{TemplateBinding BorderBrush}" />
							<Rectangle x:Name="PART_Track" />
							<Grid x:Name="PART_Indicator"
								  ClipToBounds="true"
								  HorizontalAlignment="Left">
								<Rectangle x:Name="Indicator"
										   Fill="{TemplateBinding Foreground}" />
								<Rectangle x:Name="Animation"
										   Fill="{TemplateBinding Foreground}"
										   RenderTransformOrigin="0.5,0.5">
									<Rectangle.RenderTransform>
										<TransformGroup>
											<ScaleTransform />
											<SkewTransform />
											<RotateTransform />
											<TranslateTransform />
										</TransformGroup>
									</Rectangle.RenderTransform>
								</Rectangle>
							</Grid>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="Orientation"
									 Value="Vertical">
								<Setter Property="LayoutTransform"
										TargetName="TemplateRoot">
									<Setter.Value>
										<RotateTransform Angle="-90" />
									</Setter.Value>
								</Setter>
							</Trigger>
							<Trigger Property="IsIndeterminate"
									 Value="true">
								<Setter Property="Visibility"
										TargetName="Indicator"
										Value="Collapsed" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Application.Resources>
</wpf:HostedApplication>

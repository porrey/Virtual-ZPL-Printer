<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:system="clr-namespace:System;assembly=System.Runtime">

	<SolidColorBrush x:Key="BackgroundColor1">#4490c9</SolidColorBrush>
	<SolidColorBrush x:Key="BackgroundColor2">#B7C945</SolidColorBrush>
	<SolidColorBrush x:Key="ForegroundColor1">#252525</SolidColorBrush>
	<SolidColorBrush x:Key="ForegroundColor2">#FFFFFF</SolidColorBrush>
	<SolidColorBrush x:Key="ForegroundColor3">#4490c9</SolidColorBrush>
	<SolidColorBrush x:Key="BorderColor">#AA4472C4</SolidColorBrush>
	<system:Double x:Key="ControlHeight">29</system:Double>
	<Thickness x:Key="ControlMargin">5,5,5,5</Thickness>

	<system:Double x:Key="ButtonWidth">100</system:Double>
	<system:Double x:Key="StatusButtonWidth">48</system:Double>
	<system:Double x:Key="StatusButtonHeight">48</system:Double>
	<CornerRadius x:Key="Radius">4</CornerRadius>

	<Thickness x:Key="ButtonMargin">8,5,5,5</Thickness>
	<Thickness x:Key="ButtonTextMargin">3,0,3,3</Thickness>
	<Thickness x:Key="ButtonImageMargin">7,3,7,0</Thickness>

	<Style x:Key="FocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle
						Margin="2"
						SnapsToDevicePixels="true"
						Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
						StrokeDashArray="1 2"
						StrokeThickness="1" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="Button.Static.Background" Color="#55cbedff" />
	<SolidColorBrush x:Key="Button.Static.Border" Color="#FF8fa8b4" />
	<SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
	<SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
	<SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
	<SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
	<SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
	<SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
	<SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
	<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
		<Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
		<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
		<Setter Property="BorderThickness" Value="2" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border
						x:Name="border"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{StaticResource Radius}"
						SnapsToDevicePixels="true">
						<ContentPresenter
							x:Name="contentPresenter"
							Margin="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Focusable="False"
							RecognizesAccessKey="True"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDefaulted" Value="true">
							<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
							<Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
							<Setter TargetName="contentPresenter" Property="Opacity" Value=".35" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF4490c9" />
	<SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6" />
	<SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC" />
	<Style x:Key="ProgressBarStyle1" TargetType="{x:Type ProgressBar}">
		<Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}" />
		<Setter Property="Background" Value="{StaticResource ProgressBar.Background}" />
		<Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ProgressBar}">
					<Grid x:Name="TemplateRoot">
						<Border
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}" />
						<Rectangle x:Name="PART_Track" />
						<Grid
							x:Name="PART_Indicator"
							HorizontalAlignment="Left"
							ClipToBounds="true">
							<Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" />
							<Rectangle
								x:Name="Animation"
								Fill="{TemplateBinding Foreground}"
								RenderTransformOrigin="0.5,0.5">
								<Rectangle.RenderTransform>
									<TransformGroup>
										<ScaleTransform />
										<SkewTransform />
										<RotateTransform />
										<TranslateTransform />
									</TransformGroup>
								</Rectangle.RenderTransform>
							</Rectangle>
						</Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Determinate" />
								<VisualState x:Name="Indeterminate">
									<Storyboard RepeatBehavior="Forever">
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.25" />
											<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25" />
											<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25" />
										</DoubleAnimationUsingKeyFrames>
										<PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
											<EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5" />
											<EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
											<EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5" />
										</PointAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Orientation" Value="Vertical">
							<Setter TargetName="TemplateRoot" Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="-90" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsIndeterminate" Value="true">
							<Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>